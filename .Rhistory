names(colblind4)<-c("black","orange","skyBlue","bluishGreen")
colblind4[1]<-rgb(0,0,0,maxColorValue=255, alpha=255*Alpha)
## orange
colblind4[2]<-rgb(f*230,f*159,0,maxColorValue=255, alpha=255*Alpha)
## sky blue
colblind4[3]<-rgb(f*86,f*180,f*233,maxColorValue=255, alpha=255*Alpha)
### bluish green
colblind4[4]<-rgb(0,f*158,f*115,maxColorValue=255, alpha=255*Alpha)
colblind4
}
c4<-cblind(f=.9,Alpha = 0.5)
c4ci<- cblind(f=1)
colciA<- gray(0.8,alpha=0.2)
colA<- gray(0,alpha=0.2)
colciB<- c4ci["skyBlue"]
colB<-  c4["skyBlue"]
colciAB<- c4ci["bluishGreen"]
colAB<-  c4["bluishGreen"]
colciABpred<- c4ci["orange"]
colABpred<-  c4["orange"]
coef<- bout$coef
plot(range(dose),c(min(coef[,1:3]),max(coef[,1:3])),log="x",type="n",xlab=XLAB, ylab=YLAB)
# plot A
minx<- min(dose)/100
maxx<-100*max(dose)
lo<- coef["giaA",2]
hi<- coef["giaA",3]
lines(c(minx,maxx), rep(coef["giaA","GIA"],2),lty=2,col=colA)
polygon(c(minx,maxx,maxx,minx,minx),
c(lo,lo,hi,hi,lo),col=colciA,border=NA)
vnames<- dimnames(coef)[[1]]
plotPointsCI<-function(pattern="giaB.", COL=colB,COLCI=colciB){
inP<- grep(pattern,vnames,fixed=TRUE)
f<- 0.5
points(dose,coef[inP,"GIA"],pch=16,cex=2,col=COL)
lo<- coef[inP,2]
hi<- coef[inP,3]
k<- length(dose)
polygon(c(dose,dose[k],rev(dose),dose[1]),
c(lo,hi[k],rev(hi),lo[1]),col=COLCI,border=NA)
}
plotPointsCI("giaB.",colB,colciB)
plotPointsCI("giaAB.",colAB,colciAB)
plotPointsCI("giaABpred.",colABpred,colciABpred)
}
# Chunk 13
boutgia$coef
# Chunk 14
par(mfrow=c(1,1))
Dose<-c(1.25,.625,.313,.156,.078,.039,.020,.010)
plotGIABliss(boutgia, dose=Dose, XLAB="RH5 Dose",YLAB="GIA")
g_RH5 <- ggplotGIABliss(bout = boutgia, dose = Dose,
xlab = "RH5 (mg/mL)", subtitle = "RH5-AMA1RON2",
phi_df = phi_df,
labs = c("Obs. Mixture",
"Bliss Ind. Est",
"Obs. RH5"))
# Chunk 15
d2<-read.csv("../data/Updated 3D7 GIA with RIPR and AMA1-RON2 antibodies.csv",header=TRUE)
#summary(d)
riprdose<-c(0,0,0,1.25,0.625,0.313,0.156,0.078,0.039,0.020,0.010,0,1.25,0.625,0.313,0.156,0.078,0.039,0.020,0.010)
ama1dose<-c(rep(0,11),rep(0.078,9))
d2<-data.frame(d2,riprdose,ama1dose)
de1<- d2[,2:4]
de2<- d2[,5:7]
de3<- d2[,8:10]
mean1<- apply((de1),1,mean,na.rm=TRUE)
mean2<- apply((de2),1,mean,na.rm=TRUE)
mean3<- apply((de3),1,mean,na.rm=TRUE)
nr<-nrow(de1)
set.seed(10401)
U<-matrix(runif(nr*3,min=-0.0005,max=0.0005),nr,3)
de1U<- de1+U
de2U<- de2+U
de3U<- de3+U
sd1<- apply((de1U),1,sd,na.rm=TRUE)
sd2<- apply((de2U),1,sd,na.rm=TRUE)
sd3<- apply((de3U),1,sd,na.rm=TRUE)
means<-c(mean1,mean2,mean3)
sds<-c(sd1,sd2,sd3)
# Chunk 16
par(mfrow=c(1,3))
rx<-range(log(means))
ry<-range(log(sds))
plot(log(mean1),log(sd1),xlim=rx,ylim=ry,xlab="log(mean)",ylab="log(sd)",main="Experiment 1")
lm1<-lm(log(sd1)~log(mean1))
slope1<-coef(lm1)[2]
abline(lm1)
plot(log(mean2),log(sd2),xlim=rx,ylim=ry,xlab="log(mean)",ylab="log(sd)",main="Experiment 2")
lm2<-lm(log(sd2)~log(mean2))
slope2<-coef(lm2)[2]
abline(lm2)
plot(log(mean3),log(sd3),xlim=rx,ylim=ry,xlab="log(mean)",ylab="log(sd)",main="Experiment 3")
lm3<-lm(log(sd3)~log(mean3))
slope3<-coef(lm3)[2]
abline(lm3)
# Chunk 17
par(mfrow=c(1,2))
plot(means,sds,type="n",xlab="mean",ylab="sd",main="Untransformed")
points(mean1,sd1,pch=16)
points(mean2,sd2,pch=1)
points(mean3,sd3,pch=17)
segments(mean1,sd1,x1=mean2, y1=sd2, col=gray(.85))
segments(mean2,sd2,x1=mean3, y1=sd3, col=gray(.85))
mean1<- apply(log(de1),1,mean,na.rm=TRUE)
mean2<- apply(log(de2),1,mean,na.rm=TRUE)
mean3<- apply(log(de3),1,mean,na.rm=TRUE)
sd1<- apply(log(de1U),1,sd,na.rm=TRUE)
sd2<- apply(log(de2U),1,sd,na.rm=TRUE)
sd3<- apply(log(de3U),1,sd,na.rm=TRUE)
means<-c(mean1,mean2,mean3)
sds<-c(sd1,sd2,sd3)
plot(means,sds,type="n",xlab="mean",ylab="sd",main="Log Transformed")
points(mean1,sd1,pch=16)
points(mean2,sd2,pch=1)
points(mean3,sd3,pch=17)
segments(mean1,sd1,x1=mean2, y1=sd2,col=gray(.85))
segments(mean2,sd2,x1=mean3, y1=sd3,col=gray(.85))
# Chunk 18
library(lme4)
Y<- log(c(d2[,2],d2[,3],d2[,4],d2[,5],d2[,6],d2[,7],d2[,8],d2[,9],d2[,10]))
type<- rep(factor(d2$well,levels=d2$well, labels=d2$well),9)
exp<- factor(c(rep(1,nrow(d2)*3),rep(2,nrow(d2)*3),rep(3,nrow(d2)*3)))
lout<-lmer(Y~ -1+type+(1|exp))
s.lmer<-summary(lout)
beta<-fixef(lout)
Vbeta<- vcov(lout)
k<-nrow(d2)
# change it to matrix class
Vbeta<-matrix(Vbeta@x,k,k)
#Vbeta
sd.lmer<-VarCorr(lout)
#sd.lmer
tau<-attr(sd.lmer$exp,"stddev")
sigma<-attr(sd.lmer,"sc")
#tau
#sigma
s.lmer
# Chunk 19
r2<-calcPhi(d2,output="list")
# Chunk 20
r2$phiAB
# Chunk 21
lout<-lm(log(r2$phiAB)~log(d2$riprdose[iB]))
pvalSlope<-summary(lout)$coef[2,4]
# Chunk 22
library(mvtnorm)
#library(boot)
set.seed(102031)
set.seed(SEED)
bout<-paraBoot(nboot=nBoot,data=d2)
set.seed(SEED)
boutgia<- paraBoot(nboot=nBoot, data=d2, do.gia=TRUE)
# Chunk 23
bout$coef
bout_df <- as.data.frame(bout$coef)
dose <- as.numeric(gsub("RIPR ",  "", rownames(bout$coef)))
phi_sig <- ifelse(bout_df$upper95CL > 1 & bout_df$lower95CL < 1, NA, "Sig.")
phi_df <- data.frame(dose = dose, phi_sig = phi_sig)
phi_df <- na.omit(phi_df)
# Chunk 24
par(mfrow=c(1,1))
dose<-d2$riprdose[iB]
YLIM<-c(.7,1.9)
ii<-1:8
YLIM<-range(bout$coef[ii,2:3],na.rm=TRUE)
#YLIM<-c(.8,1.4)
plot(dose,r2$phiAB,log="xy",ylim=YLIM,xlab="ripr dose",ylab=expression(phi[AB]))
lines(c(.001,2),c(1,1),lty=2,col=gray(.8))
segments(dose,bout$coef[ii,2],dose,bout$coef[ii,3])
points(dose,r2$phiAB,pch=16)
# Chunk 25
boutgia$coef
# Chunk 26
par(mfrow=c(1,1))
Dose<-c(1.25,.625,.313,.156,.078,.039,.020,.010)
plotGIABliss(boutgia, dose=Dose, XLAB="RIPR Dose",YLAB="GIA")
g_RIPR <- ggplotGIABliss(bout = boutgia, dose = Dose,
xlab = "RIPR (mg/mL)", subtitle = "RIPR-AMA1RON2",
dose_B = "AMA1-RON2",
phi_df = phi_df,
labs = c("Obs. Mixture",
"Bliss Ind. Est.",
"Obs. RIPR"))
# Chunk 27
d3<-read.csv("../data/Updated 3D7 GIA with CyRPA and AMA1-RON2 antibodies Nov 2018.csv",header=TRUE)
#### Based on meeting, set values for CyRPA 0.078+AMA1-RON2(0.078) to missing for exp2
d3[16:18,]
d3[17,5:7]<-NA
# Chunk 28
d3[17,]
# Chunk 29
## d3 is input above, and some values are set to missing
#summary(d3)
dose<-c(0,0,0,1.25,0.625,0.313,0.156,0.078,0.039,0.020,0.010,0,1.25,0.625,0.313,0.156,0.078,0.039,0.020,0.010)
ama1dose<-c(rep(0,11),rep(0.078,9))
d3<-data.frame(d3,dose,ama1dose)
de1<- d3[,2:4]
de2<- d3[,5:7]
de3<- d3[,8:10]
de4<- d3[,11:13]
de5<- d3[,14:16]
mean1<- apply((de1),1,mean,na.rm=TRUE)
mean2<- apply((de2),1,mean,na.rm=TRUE)
mean3<- apply((de3),1,mean,na.rm=TRUE)
mean4<- apply((de4),1,mean,na.rm=TRUE)
mean5<- apply((de5),1,mean,na.rm=TRUE)
nr<-nrow(de1)
set.seed(10401)
U<-matrix(runif(nr*3,min=-0.0005,max=0.0005),nr,3)
de1U<- de1+U
de2U<- de2+U
de3U<- de3+U
de4U<- de4+U
de5U<- de5+U
sd1<- apply((de1U),1,sd,na.rm=TRUE)
sd2<- apply((de2U),1,sd,na.rm=TRUE)
sd3<- apply((de3U),1,sd,na.rm=TRUE)
sd4<- apply((de4U),1,sd,na.rm=TRUE)
sd5<- apply((de5U),1,sd,na.rm=TRUE)
means<-c(mean1,mean2,mean3,mean4,mean5)
sds<-c(sd1,sd2,sd3,sd4,sd5)
# Chunk 30
par(mfrow=c(2,3))
rx<-range(log(means),na.rm=TRUE)
ry<-range(log(sds),na.rm=TRUE)
plot(log(mean1),log(sd1),xlim=rx,ylim=ry,xlab="log(mean)",ylab="log(sd)",main="Experiment 1")
lm1<-lm(log(sd1)~log(mean1))
slope1<-coef(lm1)[2]
abline(lm1)
plot(log(mean2),log(sd2),xlim=rx,ylim=ry,xlab="log(mean)",ylab="log(sd)",main="Experiment 2")
lm2<-lm(log(sd2)~log(mean2))
slope2<-coef(lm2)[2]
abline(lm2)
plot(log(mean3),log(sd3),xlim=rx,ylim=ry,xlab="log(mean)",ylab="log(sd)",main="Experiment 3")
lm3<-lm(log(sd3)~log(mean3))
slope3<-coef(lm3)[2]
abline(lm3)
plot(log(mean4),log(sd4),xlim=rx,ylim=ry,xlab="log(mean)",ylab="log(sd)",main="Experiment 4")
lm4<-lm(log(sd4)~log(mean4))
slope4<-coef(lm4)[2]
abline(lm4)
plot(log(mean5),log(sd5),xlim=rx,ylim=ry,xlab="log(mean)",ylab="log(sd)",main="Experiment 5")
lm5<-lm(log(sd5)~log(mean5))
slope5<-coef(lm5)[2]
abline(lm5)
# Chunk 31
par(mfrow=c(1,2))
plot(means,sds,type="n",xlab="mean",ylab="sd",main="Untransformed")
segments(mean1,sd1,x1=mean2, y1=sd2, col=gray(.85))
segments(mean2,sd2,x1=mean3, y1=sd3, col=gray(.85))
segments(mean3,sd3,x1=mean4, y1=sd4, col=gray(.85))
segments(mean4,sd4,x1=mean5, y1=sd5, col=gray(.85))
points(mean1,sd1,pch=16)
points(mean2,sd2,pch=1)
points(mean3,sd3,pch=17)
points(mean4,sd4,pch=22)
points(mean5,sd5,pch=25)
mean1<- apply(log(de1),1,mean,na.rm=TRUE)
mean2<- apply(log(de2),1,mean,na.rm=TRUE)
mean3<- apply(log(de3),1,mean,na.rm=TRUE)
mean4<- apply(log(de4),1,mean,na.rm=TRUE)
mean5<- apply(log(de5),1,mean,na.rm=TRUE)
sd1<- apply(log(de1),1,sd,na.rm=TRUE)
sd2<- apply(log(de2),1,sd,na.rm=TRUE)
sd3<- apply(log(de3),1,sd,na.rm=TRUE)
sd4<- apply(log(de4),1,sd,na.rm=TRUE)
sd5<- apply(log(de5),1,sd,na.rm=TRUE)
means<-c(mean1,mean2,mean3,mean4,mean5)
sds<-c(sd1,sd2,sd3,sd4,sd5)
plot(means,sds,type="n",xlab="mean",ylab="sd",main="Log Transformed")
segments(mean1,sd1,x1=mean2, y1=sd2,col=gray(.85))
segments(mean2,sd2,x1=mean3, y1=sd3, col=gray(.85))
segments(mean3,sd3,x1=mean4, y1=sd4, col=gray(.85))
segments(mean4,sd4,x1=mean5, y1=sd5, col=gray(.85))
points(mean1,sd1,pch=16)
points(mean2,sd2,pch=1)
points(mean3,sd3,pch=17)
points(mean4,sd4,pch=22)
points(mean5,sd5,pch=25)
# Chunk 32
library(lme4)
Y<- log(c(d3[,2],d3[,3],d3[,4],d3[,5],d3[,6],d3[,7],d3[,8],d3[,9],d3[,10],
d3[,11],d3[,12],d3[,13],d3[,14],d3[,15],d3[,16]))
type<- rep(factor(d3$well,levels=d3$well, labels=d3$well),15)
exp<- factor(c(rep(1,nrow(d3)*3),rep(2,nrow(d3)*3),rep(3,nrow(d3)*3),
rep(4,nrow(d3)*3),rep(5,nrow(d3)*3)))
D3<-data.frame(Y,type,exp)
D3<-D3[!is.na(Y),]
lout<-lmer(Y~ -1+type+(1|exp),data=D3)
s.lmer<-summary(lout)
beta<-fixef(lout)
Vbeta<- vcov(lout)
k<-nrow(d3)
# change it to matrix class
Vbeta<-matrix(Vbeta@x,k,k)
#Vbeta
sd.lmer<-VarCorr(lout)
#sd.lmer
tau<-attr(sd.lmer$exp,"stddev")
sigma<-attr(sd.lmer,"sc")
#tau
#sigma
s.lmer
# Chunk 33
r3<-calcPhi(d3,output="list")
# Chunk 34
r3$phiAB
# Chunk 35
lout<-lm(log(r3$phiAB)~log(d3$dose[iB]))
pvalSlope<-summary(lout)$coef[2,4]
# Chunk 36
library(mvtnorm)
#library(boot)
#set.seed(102031)
set.seed(SEED)
bout<-paraBoot(nboot=nBoot, data=d3)
set.seed(SEED)
boutgia<- paraBoot(nboot=nBoot, data=d3, do.gia=TRUE)
# Chunk 37
bout$coef
bout_df <- as.data.frame(bout$coef)
dose <- as.numeric(gsub("CyRPA ",  "", rownames(bout$coef)))
phi_sig <- ifelse(bout_df$upper95CL > 1 & bout_df$lower95CL < 1, NA, "Sig.")
phi_df <- data.frame(dose = dose, phi_sig = phi_sig)
phi_df <- na.omit(phi_df)
# Chunk 38
dose<-d3$dose[iB]
YLIM<-c(.1,1.9)
#YLIM<-c(.8,1.4)
ii<-1:8
YLIM<-range(bout$coef[ii,2:3],na.rm=TRUE)
plot(dose,r3$phiAB,log="xy",ylim=YLIM,xlab="CyRPA dose",ylab=expression(phi[AB]))
lines(c(.001,2),c(1,1),lty=2,col=gray(.8))
segments(dose,bout$coef[ii,2],dose,bout$coef[ii,3])
points(dose,r3$phiAB,pch=16)
# Chunk 39
boutgia$coef
# Chunk 40
par(mfrow=c(1,1))
Dose<-c(1.25,.625,.313,.156,.078,.039,.020,.010)
plotGIABliss(boutgia, dose=Dose, XLAB="CyRPA Dose",YLAB="GIA")
g_CyRPA <- ggplotGIABliss(bout = boutgia, dose = Dose,
xlab = "CyRPA (mg/mL)", subtitle = "CyRPA-AMA1RON2",
phi_df = phi_df,
labs = c("Obs. Mixture",
"Bliss Ind. Est.",
"Obs. CyRPA")
)
# Chunk 41
d4<-read.csv("../data/Updated 3D7 GIA with CyRPA and RIPR antibodies Nov 2018.csv",header=TRUE)
#d4
d4[c(11,12,20),]
# Chunk 42
#d4
#summary(d4)
dose<-c(0,0,0,1.25,0.625,0.313,0.156,0.078,0.039,0.020,0.010,0,1.25,0.625,0.313,0.156,0.078,0.039,0.020,0.010)
RIPRdose<-c(rep(0,11),rep(0.156,9))
d4<-data.frame(d4,dose,RIPRdose)
de1<- d4[,2:4]
de2<- d4[,5:7]
de3<- d4[,8:10]
de4<- d4[,11:13]
de5<- d4[,14:16]
mean1<- apply((de1),1,mean,na.rm=TRUE)
mean2<- apply((de2),1,mean,na.rm=TRUE)
mean3<- apply((de3),1,mean,na.rm=TRUE)
mean4<- apply((de4),1,mean,na.rm=TRUE)
mean5<- apply((de5),1,mean,na.rm=TRUE)
nr<-nrow(de1)
set.seed(10401)
U<-matrix(runif(nr*3,min=-0.0005,max=0.0005),nr,3)
de1U<- de1+U
de2U<- de2+U
de3U<- de3+U
de4U<- de4+U
de5U<- de5+U
sd1<- apply((de1U),1,sd,na.rm=TRUE)
sd2<- apply((de2U),1,sd,na.rm=TRUE)
sd3<- apply((de3U),1,sd,na.rm=TRUE)
sd4<- apply((de4U),1,sd,na.rm=TRUE)
sd5<- apply((de5U),1,sd,na.rm=TRUE)
means<-c(mean1,mean2,mean3,mean4,mean5)
sds<-c(sd1,sd2,sd3,sd4,sd5)
# Chunk 43
par(mfrow=c(2,3))
rx<-range(log(means),na.rm=TRUE)
ry<-range(log(sds),na.rm=TRUE)
plot(log(mean1),log(sd1),xlim=rx, ylim=ry, xlab="log(mean)",ylab="log(sd)",main="Experiment 1")
lm1<-lm(log(sd1)~log(mean1))
slope1<-coef(lm1)[2]
abline(lm1)
plot(log(mean2),log(sd2),xlim=rx, ylim=ry, xlab="log(mean)",ylab="log(sd)",main="Experiment 2")
lm2<-lm(log(sd2)~log(mean2))
slope2<-coef(lm2)[2]
abline(lm2)
plot(log(mean3),log(sd3),xlim=rx, ylim=ry, xlab="log(mean)",ylab="log(sd)",main="Experiment 3")
lm3<-lm(log(sd3)~log(mean3))
slope3<-coef(lm3)[2]
abline(lm3)
plot(log(mean4),log(sd4),xlim=rx, ylim=ry, xlab="log(mean)",ylab="log(sd)",main="Experiment 4")
lm4<-lm(log(sd4)~log(mean4))
slope4<-coef(lm4)[2]
abline(lm4)
plot(log(mean5),log(sd5),xlim=rx, ylim=ry, xlab="log(mean)",ylab="log(sd)",main="Experiment 5")
lm5<-lm(log(sd5)~log(mean5))
slope5<-coef(lm5)[2]
abline(lm5)
# Chunk 44
par(mfrow=c(1,2))
plot(means,sds,type="n",xlab="mean",ylab="sd",main="Untransformed")
points(mean1,sd1,pch=16)
points(mean2,sd2,pch=1)
points(mean3,sd3,pch=17)
points(mean4,sd4,pch=22)
points(mean5,sd5,pch=25)
segments(mean1,sd1,x1=mean2, y1=sd2, col=gray(.85))
segments(mean2,sd2,x1=mean3, y1=sd3, col=gray(.85))
segments(mean3,sd3,x1=mean4, y1=sd4, col=gray(.85))
segments(mean4,sd4,x1=mean5, y1=sd5, col=gray(.85))
mean1<- apply(log(de1),1,mean,na.rm=TRUE)
mean2<- apply(log(de2),1,mean,na.rm=TRUE)
mean3<- apply(log(de3),1,mean,na.rm=TRUE)
mean4<- apply(log(de4),1,mean,na.rm=TRUE)
mean5<- apply(log(de5),1,mean,na.rm=TRUE)
sd1<- apply(log(de1),1,sd,na.rm=TRUE)
sd2<- apply(log(de2),1,sd,na.rm=TRUE)
sd3<- apply(log(de3),1,sd,na.rm=TRUE)
sd4<- apply(log(de4),1,sd,na.rm=TRUE)
sd5<- apply(log(de5),1,sd,na.rm=TRUE)
means<-c(mean1,mean2,mean3,mean4,mean5)
sds<-c(sd1,sd2,sd3,sd4,sd5)
plot(means,sds,type="n",xlab="mean",ylab="sd",main="Log Transformed")
points(mean1,sd1,pch=16)
points(mean2,sd2,pch=1)
points(mean3,sd3,pch=17)
points(mean4,sd4,pch=22)
points(mean5,sd5,pch=25)
segments(mean1,sd1,x1=mean2, y1=sd2,col=gray(.85))
segments(mean2,sd2,x1=mean3, y1=sd3, col=gray(.85))
segments(mean3,sd3,x1=mean4, y1=sd4, col=gray(.85))
segments(mean4,sd4,x1=mean5, y1=sd5, col=gray(.85))
# Chunk 45
library(lme4)
Y<- log(c(d4[,2],d4[,3],d4[,4],d4[,5],d4[,6],d4[,7],d4[,8],d4[,9],d4[,10],
d4[,11],d4[,12],d4[,13],d4[,14],d4[,15],d4[,16]))
type<- rep(factor(d4$well,levels=d4$well, labels=d4$well),15)
exp<- factor(c(rep(1,nrow(d4)*3),rep(2,nrow(d4)*3),rep(3,nrow(d4)*3),
rep(4,nrow(d4)*3),rep(5,nrow(d4)*3)))
D4<-data.frame(Y,type,exp)
D4<-D4[!is.na(Y),]
lout<-lmer(Y~ -1+type+(1|exp),data=D4)
s.lmer<-summary(lout)
beta<-fixef(lout)
Vbeta<- vcov(lout)
k<-nrow(d4)
# change it to matrix class
Vbeta<-matrix(Vbeta@x,k,k)
#Vbeta
sd.lmer<-VarCorr(lout)
#sd.lmer
tau<-attr(sd.lmer$exp,"stddev")
sigma<-attr(sd.lmer,"sc")
#tau
#sigma
s.lmer
# Chunk 46
r4<-calcPhi(d4,output="list")
# Chunk 47
r4$phiAB
# Chunk 48
lout<-lm(log(r4$phiAB)~log(d4$dose[iB]))
pvalSlope<-summary(lout)$coef[2,4]
# Chunk 49
library(mvtnorm)
#library(boot)
#set.seed(102031)
set.seed(SEED)
bout<-paraBoot(nboot=nBoot, data=d4)
set.seed(SEED)
boutgia<- paraBoot(nboot=nBoot, data=d4, do.gia=TRUE)
# Chunk 50
bout$coef
bout_df <- as.data.frame(bout$coef)
dose <- as.numeric(gsub("CyRPA ",  "", rownames(bout$coef)))
phi_sig <- ifelse(bout_df$upper95CL > 1 & bout_df$lower95CL < 1, NA, "Sig.")
phi_df <- data.frame(dose = dose, phi_sig = phi_sig)
phi_df <- na.omit(phi_df)
# Chunk 51
dose<-d4$dose[iB]
YLIM<-c(.6,1.4)
#YLIM<-c(.8,1.4)
ii<- 1:8
YLIM<-range(bout$coef[ii,2:3],na.rm=TRUE)
plot(dose,r4$phiAB,log="xy",ylim=YLIM,xlab="CyRPA dose",ylab=expression(phi[AB]))
lines(c(.001,2),c(1,1),lty=2,col=gray(.8))
segments(dose,bout$coef[ii,2],dose,bout$coef[ii,3])
points(dose,r4$phiAB,pch=16)
# Chunk 52
boutgia$coef
par(mfrow=c(1,1))
Dose<-c(1.25,.625,.313,.156,.078,.039,.020,.010)
plotGIABliss(boutgia, dose=Dose, XLAB="CyRPA Dose",YLAB="GIA")
g_CyRPA2 <- ggplotGIABliss(bout = boutgia, dose = Dose,
xlab = "CyRPA (mg/mL)", subtitle = "CyRPA-RIPR",
dose_B = "RIPR", phi_df = phi_df,
labs = c("Obs. Mixture",
"Bliss Ind.Est.",
"Obs. CyRPA"))
library(gridExtra)
grid.arrange(g_RH5, g_RIPR,
g_CyRPA, g_CyRPA2)
