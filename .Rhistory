library(knitr)
library(kableExtra)
results <- rh5_ama1ron2 %>%
rename(dose_A = "RH5", dose_B = "AMA1RON2")  %>%
fortify_gia_data() %>%
estimate_params()
library(dplyr)
results <- rh5_ama1ron2 %>%
rename(dose_A = "RH5", dose_B = "AMA1RON2")  %>%
fortify_gia_data() %>%
estimate_params()
results$params_est
rmarkdown::render("vignettes/quickstart.Rmd")
getwd()
out <- design_experiment(n_rep = 2)
library(loewesadditivity)
levels_A <- c(0, 0.0625, 0.125, 0.25, 0.5, 1, 2, 4)
levels_B <- c(0, 0.125, 0.25, 0.5, 1, 2, 4, 8)
par <- c(  'beta_A' = 1,
'beta_B' = 2,
'gamma_A' = 0.5,
'gamma_B' = 0.5,
'tau_1' = 3,
'tau_2' = 0.05)
my_grid <- design_grid(levels_A = levels_A,
levels_B = levels_B,
n_rep = 2)
## SIMULATE COVERAGE
sim_results <- simulate_coverage(n_sims = 100,
n_boot = 100,
experimental_grid = my_grid,
model_par = par,
alpha = .05,
noise_par = c('a0' = 3,
'a1' = 0.01))
## LOOK AT RESULTS
sim_results
## Uncomment below to write the grid to a .csv file you can open in Excel or google spreadsheets
#write.csv(sim_results, 'coverage_results.csv')
devtools::load_all()
devtools::load_all()
results <- rh5_ama1ron2 %>%
rename(dose_A = "RH5", dose_B = "AMA1RON2")  %>%
fortify_gia_data() %>%
estimate_params()
library(dplyr)
data("rh5_ama1ron2")
results <- rh5_ama1ron2 %>%
rename(dose_A = "RH5", dose_B = "AMA1RON2")  %>%
fortify_gia_data() %>%
estimate_params()
results$params_est
grid <- data.frame(dose_A = results$GIA_est$dose_A,
dose_B = results$GIA_est$dose_B)
grid
head(results$GIA_est)
mod <- lm(res~ (100 - results$GIA_est)^2)
res <- (results$GIA_est$GIA - results$GIA_est$mean)^
x <- (100 - results$GIA_est$GIA)^2
res <- (results$GIA_est$GIA - results$GIA_est$mean)^
x <- (100 - results$GIA_est$GIA)^2
res <- (results$GIA_est$GIA - results$GIA_est$mean)^2
x <- (100 - results$GIA_est$GIA)^2
mod <- lm(res~x)
coefs <- summary(mod)
summary(mod)
coef(mod)
noise_par <- coef(mod)
names(noise_par) <- c("a0", "a1")
noise_par
source('C:/Github/loewesadditivity/skg_paper/paper_simulations.R', echo=TRUE)
source('C:/Github/loewesadditivity/skg_paper/paper_simulations.R', echo=TRUE)
source('C:/Github/loewesadditivity/skg_paper/paper_simulations.R', echo=TRUE)
saveRDS(out, "rh5-ama1ron2-sims.RDS")
##
##CyRPA AMA1RON2
##
data("cyrpa_ripr")
head(cyrpa_ripr)
data("cyrpa_ripr")
results <- cyrpa_ripr %>%
rename(dose_A = "CyRPA", dose_B = "RIPR")  %>%
fortify_gia_data() %>%
estimate_params()
model_params <- results$params_est$mean
names(model_params) <- results$params_est$param
grid <- data.frame(dose_A = results$GIA_est$dose_A,
dose_B = results$GIA_est$dose_B)
res <- (results$GIA_est$GIA - results$GIA_est$mean)^2
x <- (100 - results$GIA_est$GIA)^2
mod <- lm(res~x)
coefs <- summary(mod)
noise_par <- coef(mod)
names(noise_par) <- c("a0", "a1")
n_boot <- 100
n_sims <- 100
GIA_fn <- base_GIA
S_fn <- calc_S_base
fn_list <- NULL
alpha <- .05
verbose <- TRUE
out <- simulate_coverage(n_sims = n_sims,
n_boot = n_boot,
verbose = TRUE,
experimental_grid = grid,
model_par = model_params,
alpha = .05,
noise_par = noise_par,
GIA_fn = base_GIA,
fn_list = NULL)
out
saveRDS(out, "cyrpa-ripr-sims.RDS")
results1 <- rh5_ama1ron2 %>%
rename(dose_A = "RH5", dose_B = "AMA1RON2")  %>%
fortify_gia_data() %>%
estimate_params()
df1 <- results1$GIA_est
df1$type <- "RH5-AMA1RON2"
## RH5 and AMA1RON2
results1 <- rh5_ama1ron2 %>%
rename(dose_A = "RH5", dose_B = "AMA1RON2")  %>%
fortify_gia_data() %>%
estimate_params()
df1 <- results1$GIA_est
df1$data_type <- "RH5-AMA1RON2"
## CyRPA RIPR
data("cyrpa_ripr")
results2 <- cyrpa_ripr %>%
rename(dose_A = "CyRPA", dose_B = "RIPR")  %>%
fortify_gia_data() %>%
estimate_params()
df2 <- results2$GIA_est
df1$data_type <- "CyRPA-RIPR"
df2$data_type <- "CyRPA-RIPR"
df1$data_type <- "RH5-AMA1RON2"
df_all <- dplyr::bind_rows(df1, df2)
### TOGETHERRR
df_all1 <- df_all
df_all2 <- df_all
df_all2$dose_A <- df_all1$dose_B
df_all2$dose_B <- df_all1$dose_A
df_all2$name_A <- df_all1$name_B
df_all2$name_B <- df_all1$name_A
df1$data_type <- "RH5-AMA1RON2"
df1$name_A <- "RH5"
df1$name_B <- "AMA1RON2"
df2$name_B <- "RIPR"
df2$data_type <- "CyRPA-RIPR"
df2$name_A <- "CyRPA"
df_all <- dplyr::bind_rows(df1, df2)
### TOGETHERRR
df_all1 <- df_all
df_all2 <- df_all
df_all2$dose_A <- df_all1$dose_B
df_all2$dose_B <- df_all1$dose_A
df_all2$name_A <- df_all1$name_B
df_all2$name_B <- df_all1$name_A
big_df <- rbind(df_all1, df_all2)
big_df$facet <- paste(big_df$name_B, round(big_df$dose_B, 3))
## Non surface plots
ggplot()+
geom_ribbon(data = big_df,
aes(x = dose_A,
ymin = gia_exp + lower,
ymax = gia_exp + upper,
fill = name_B,
group = paste(dose_B, exper, name_B)), alpha = .3) +
geom_line(data = big_df, aes(x = dose_A, y = gia_exp + median,
group = paste(dose_B, exper, name_B), col = name_B)) +
# geom_point(data = df_all, aes(x = dose_A, y = gia_exp + median, group = paste(dose_B, group), col = group)) +
geom_point(data = big_df, aes(x = dose_A, y = GIA)) +
facet_wrap(~name_A + facet, ncol = 6) +
theme_bw(base_size = 12) +
theme(legend.position = "bottom") +
scale_x_sqrt() +
labs(x = latex2exp::TeX("Dose (mg/mL)"),
y = "GIA %",
title = "Observed and predicted values",
subtitle = "With 95% pointwise confidence intervals") +
scale_color_brewer(palette = "Dark2", name = "Dose Name ") +
scale_fill_brewer(palette = "Dark2", name = "Dose Name ")
library(ggplot2)
## Non surface plots
ggplot()+
geom_ribbon(data = big_df,
aes(x = dose_A,
ymin = gia_exp + lower,
ymax = gia_exp + upper,
fill = name_B,
group = paste(dose_B, exper, name_B)), alpha = .3) +
geom_line(data = big_df, aes(x = dose_A, y = gia_exp + median,
group = paste(dose_B, exper, name_B), col = name_B)) +
# geom_point(data = df_all, aes(x = dose_A, y = gia_exp + median, group = paste(dose_B, group), col = group)) +
geom_point(data = big_df, aes(x = dose_A, y = GIA)) +
facet_wrap(~name_A + facet, ncol = 6) +
theme_bw(base_size = 12) +
theme(legend.position = "bottom") +
scale_x_sqrt() +
labs(x = latex2exp::TeX("Dose (mg/mL)"),
y = "GIA %",
title = "Observed and predicted values",
subtitle = "With 95% pointwise confidence intervals") +
scale_color_brewer(palette = "Dark2", name = "Dose Name ") +
scale_fill_brewer(palette = "Dark2", name = "Dose Name ")
head(big_df)
## Non surface plots
ggplot()+
geom_ribbon(data = big_df,
aes(x = dose_A,
ymin = lower,
ymax = upper,
fill = name_B,
group = paste(dose_B, exper, name_B)), alpha = .3) +
geom_line(data = big_df, aes(x = dose_A, y = mean,
group = paste(dose_B, exper, name_B), col = name_B)) +
# geom_point(data = df_all, aes(x = dose_A, y = gia_exp + median, group = paste(dose_B, group), col = group)) +
geom_point(data = big_df, aes(x = dose_A, y = GIA)) +
facet_wrap(~name_A + facet, ncol = 6) +
theme_bw(base_size = 12) +
theme(legend.position = "bottom") +
scale_x_sqrt() +
labs(x = latex2exp::TeX("Dose (mg/mL)"),
y = "GIA %",
title = "Observed and predicted values",
subtitle = "With 95% pointwise confidence intervals") +
scale_color_brewer(palette = "Dark2", name = "Dose Name ") +
scale_fill_brewer(palette = "Dark2", name = "Dose Name ")
## Non surface plots
ggplot() +
geom_ribbon(data = big_df,
aes(x = dose_A,
ymin = lower,
ymax = upper,
fill = name_B,
group = paste(dose_B, exper, name_B)), alpha = .3) +
geom_line(data = big_df, aes(x = dose_A, y = mean,
group = paste(dose_B, name_B), col = name_B)) +
# geom_point(data = df_all, aes(x = dose_A, y = gia_exp + median, group = paste(dose_B, group), col = group)) +
geom_point(data = big_df, aes(x = dose_A, y = GIA)) +
facet_wrap(~name_A + facet, ncol = 6) +
theme_bw(base_size = 12) +
theme(legend.position = "bottom") +
scale_x_sqrt() +
labs(x = latex2exp::TeX("Dose (mg/mL)"),
y = "GIA %",
title = "Observed and predicted values",
subtitle = "With 95% pointwise confidence intervals") +
scale_color_brewer(palette = "Dark2", name = "Dose Name ") +
scale_fill_brewer(palette = "Dark2", name = "Dose Name ")
## Non surface plots
ggplot() +
geom_ribbon(data = big_df,
aes(x = dose_A,
ymin = lower,
ymax = upper,
fill = name_B,
group = paste(dose_B, name_B)), alpha = .3) +
geom_line(data = big_df, aes(x = dose_A, y = mean,
group = paste(dose_B, name_B), col = name_B)) +
# geom_point(data = df_all, aes(x = dose_A, y = gia_exp + median, group = paste(dose_B, group), col = group)) +
geom_point(data = big_df, aes(x = dose_A, y = GIA)) +
facet_wrap(~name_A + facet, ncol = 6) +
theme_bw(base_size = 12) +
theme(legend.position = "bottom") +
scale_x_sqrt() +
labs(x = latex2exp::TeX("Dose (mg/mL)"),
y = "GIA %",
title = "Observed and predicted values",
subtitle = "With 95% pointwise confidence intervals") +
scale_color_brewer(palette = "Dark2", name = "Dose Name ") +
scale_fill_brewer(palette = "Dark2", name = "Dose Name ")
## Non surface plots
ggplot() +
geom_ribbon(data = big_df,
aes(x = dose_A,
ymin = lower,
ymax = upper,
fill = name_B,
group = paste(dose_B, name_B)), alpha = .3) +
geom_line(data = big_df, aes(x = dose_A, y = mean,
group = paste(dose_B, name_B), col = name_B)) +
# geom_point(data = df_all, aes(x = dose_A, y = gia_exp + median, group = paste(dose_B, group), col = group)) +
geom_point(data = big_df, aes(x = dose_A, y = GIA)) +
facet_wrap(~name_A + facet, ncol = 6) +
theme_bw(base_size = 12) +
theme(legend.position = "bottom") +
scale_x_sqrt() +
labs(x = latex2exp::TeX("Dose (mg/mL)"),
y = "GIA %",
title = "Observed and predicted values",
subtitle = "With 95% pointwise confidence intervals") +
scale_color_brewer(palette = "Dark2", name = "Compound Name ") +
scale_fill_brewer(palette = "Dark2", name = "Compound Name ")
ggsave("curves.png", width = 6, dpi = 1000)
getwd()
ggsave("curves.png", width = 12, dpi = 1000)
setwd("skg_paper/")
ggsave("curves.png", width = 12, dpi = 1000)
ggsave("curves.png")
## Non surface plots
ggplot() +
geom_ribbon(data = big_df,
aes(x = dose_A,
ymin = lower,
ymax = upper,
fill = name_B,
group = paste(dose_B, name_B)), alpha = .3) +
geom_line(data = big_df, aes(x = dose_A, y = mean,
group = paste(dose_B, name_B), col = name_B)) +
# geom_point(data = df_all, aes(x = dose_A, y = gia_exp + median, group = paste(dose_B, group), col = group)) +
geom_point(data = big_df, aes(x = dose_A, y = GIA)) +
facet_wrap(~name_A + facet, ncol = 6) +
theme_bw(base_size = 8) +
theme(legend.position = "bottom") +
scale_x_sqrt() +
labs(x = latex2exp::TeX("Dose (mg/mL)"),
y = "GIA %",
title = "Observed and predicted values",
subtitle = "With 95% pointwise confidence intervals") +
scale_color_brewer(palette = "Dark2", name = "Compound Name ") +
scale_fill_brewer(palette = "Dark2", name = "Compound Name ")
## Non surface plots
ggplot() +
geom_ribbon(data = big_df,
aes(x = dose_A,
ymin = lower,
ymax = upper,
fill = name_B,
group = paste(dose_B, name_B)), alpha = .3) +
geom_line(data = big_df, aes(x = dose_A, y = mean,
group = paste(dose_B, name_B), col = name_B)) +
# geom_point(data = df_all, aes(x = dose_A, y = gia_exp + median, group = paste(dose_B, group), col = group)) +
geom_point(data = big_df, aes(x = dose_A, y = GIA), size = .5) +
facet_wrap(~name_A + facet, ncol = 6) +
theme_bw(base_size = 8) +
theme(legend.position = "bottom") +
scale_x_sqrt() +
labs(x = latex2exp::TeX("Dose (mg/mL)"),
y = "GIA %",
title = "Observed and predicted values",
subtitle = "With 95% pointwise confidence intervals") +
scale_color_brewer(palette = "Dark2", name = "Compound Name ") +
scale_fill_brewer(palette = "Dark2", name = "Compound Name ")
ggsave("curves.png")
## Non surface plots
ggplot() +
geom_ribbon(data = big_df,
aes(x = dose_A,
ymin = lower,
ymax = upper,
fill = name_B,
group = paste(dose_B, name_B)), alpha = .3) +
geom_line(data = big_df, aes(x = dose_A, y = mean,
group = paste(dose_B, name_B), col = name_B)) +
# geom_point(data = df_all, aes(x = dose_A, y = gia_exp + median, group = paste(dose_B, group), col = group)) +
geom_point(data = big_df, aes(x = dose_A, y = GIA), size = .75) +
facet_wrap(~name_A + facet, ncol = 6) +
theme_bw(base_size = 8) +
theme(legend.position = "bottom") +
scale_x_sqrt() +
labs(x = latex2exp::TeX("Dose (mg/mL)"),
y = "GIA %",
title = "Observed and predicted values",
subtitle = "With 95% pointwise confidence intervals") +
scale_color_brewer(palette = "Dark2", name = "Compound Name ") +
scale_fill_brewer(palette = "Dark2", name = "Compound Name ")
ggsave("curves.png")
setwd("C:/Github")
cites <- read.csv("rd-cites.csv")
install.packages("tm")
keywords <- cites$Author.Keywords
head(keywords)
class(keywords2)
keywords <- cites$Author.Keywords
keywords2 <- tolower(keywords)
class(keywords2)
length(keywords2)
library(tm)
docs <- Corpus(VectorSource(keywords2))
# Convert the text to lower case
docs <- tm_map(docs, content_transformer(tolower))
# Remove numbers
docs <- tm_map(docs, removeNumbers)
# Remove english common stopwords
docs <- tm_map(docs, removeWords, stopwords("english"))
# Remove your own stop word
# specify your stopwords as a character vector
docs <- tm_map(docs, removeWords, c("blabla1", "blabla2"))
# Remove punctuations
docs <- tm_map(docs, removePunctuation)
# Eliminate extra white spaces
docs <- tm_map(docs, stripWhitespace)
dtm <- TermDocumentMatrix(docs)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
d <- data.frame(word = names(v),freq=v)
head(d, 10)
head(d, 20)
shiny::runApp('~/GitHub/additivity')
## RH5 and AMA1RON2
results1 <- rh5_ama1ron2 %>%
rename(dose_A = "RH5", dose_B = "AMA1RON2")  %>%
fortify_gia_data() %>%
estimate_params()
df1 <- results1$GIA_est
df1$data_type <- "RH5-AMA1RON2"
df1$name_A <- "RH5"
df1$name_B <- "AMA1RON2"
## CyRPA RIPR
data("cyrpa_ripr")
results2 <- cyrpa_ripr %>%
rename(dose_A = "CyRPA", dose_B = "RIPR")  %>%
fortify_gia_data() %>%
estimate_params()
df2 <- results2$GIA_est
df2$name_A <- "CyRPA"
df2$name_B <- "RIPR"
df2$data_type <- "CyRPA-RIPR"
library(ggplot2)
devtools::load_all()
## RH5 and AMA1RON2
results1 <- rh5_ama1ron2 %>%
rename(dose_A = "RH5", dose_B = "AMA1RON2")  %>%
fortify_gia_data() %>%
estimate_params()
df1 <- results1$GIA_est
df1$data_type <- "RH5-AMA1RON2"
df1$name_A <- "RH5"
df1$name_B <- "AMA1RON2"
## CyRPA RIPR
data("cyrpa_ripr")
results2 <- cyrpa_ripr %>%
rename(dose_A = "CyRPA", dose_B = "RIPR")  %>%
fortify_gia_data() %>%
estimate_params()
df2 <- results2$GIA_est
df2$name_A <- "CyRPA"
df2$name_B <- "RIPR"
df2$data_type <- "CyRPA-RIPR"
##
tab1 <- results1$par
getwd()
setwd("loewesadditivity/")
library(ggplot2)
devtools::load_all()
## RH5 and AMA1RON2
results1 <- rh5_ama1ron2 %>%
rename(dose_A = "RH5", dose_B = "AMA1RON2")  %>%
fortify_gia_data() %>%
estimate_params()
df1 <- results1$GIA_est
df1$data_type <- "RH5-AMA1RON2"
df1$name_A <- "RH5"
df1$name_B <- "AMA1RON2"
## CyRPA RIPR
data("cyrpa_ripr")
results2 <- cyrpa_ripr %>%
rename(dose_A = "CyRPA", dose_B = "RIPR")  %>%
fortify_gia_data() %>%
estimate_params()
df2 <- results2$GIA_est
df2$name_A <- "CyRPA"
df2$name_B <- "RIPR"
df2$data_type <- "CyRPA-RIPR"
##
tab1 <- results1$par
library(ggplot2)
library(dplyr)
devtools::load_all()
## RH5 and AMA1RON2
results1 <- rh5_ama1ron2 %>%
rename(dose_A = "RH5", dose_B = "AMA1RON2")  %>%
fortify_gia_data() %>%
estimate_params()
df1 <- results1$GIA_est
df1$data_type <- "RH5-AMA1RON2"
df1$name_A <- "RH5"
df1$name_B <- "AMA1RON2"
## CyRPA RIPR
data("cyrpa_ripr")
results2 <- cyrpa_ripr %>%
rename(dose_A = "CyRPA", dose_B = "RIPR")  %>%
fortify_gia_data() %>%
estimate_params()
df2 <- results2$GIA_est
df2$name_A <- "CyRPA"
df2$name_B <- "RIPR"
df2$data_type <- "CyRPA-RIPR"
##
tab1 <- results1$par
tab1
tab2 <- results2$par
tab1
tab2
## ISOBOLOGRAM
plot_isobologram(results1, dose_A = "RH5", dose_B = "AMA1RON2")
ggsave("iso-rh5-ama1ron2.png")
getwd()
setwd("skg_paper/")
ggsave("iso-rh5-ama1ron2.png")
plot_isobologram(results2, dose_A = "CyRPA", dose_B = "RIPR")
ggsave("iso-cyrpa-ripr.png")
devtools::load_all()
citation(package = "loewesadditivity")
citation(package = "loewesadditivity")
citation(package = "loewesadditivity")
citation(package = "loewesadditivity")
?citation
x <- citation(package = "loewesadditivity")
toBibtex(x)
toLatex(x)
citation(package = "loewesadditivity")
